<?php

/*
 *
 *  ____            _        _   __  __ _                  __  __ ____
 * |  _ \ ___   ___| | _____| |_|  \/  (_)_ __   ___      |  \/  |  _ \
 * | |_) / _ \ / __| |/ / _ \ __| |\/| | | '_ \ / _ \_____| |\/| | |_) |
 * |  __/ (_) | (__|   <  __/ |_| |  | | | | | |  __/_____| |  | |  __/
 * |_|   \___/ \___|_|\_\___|\__|_|  |_|_|_| |_|\___|     |_|  |_|_|
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Lesser General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * @author PocketMine Team
 * @link   http://www.pocketmine.net/
 *
 *
 */

namespace pocketmine\event\level;

use pocketmine\event\level\LevelEvent;
use pocketmine\event\Cancellable
use pocketmine\level\Level;
use pocketmine\Player

class ChunkUseEvent extends LevelEvent implement Cancellable{

  	/** @var int */
	private $x;
	
	/** @var int */
	private $z;
	
	/** @var Player */
	private $player;

	/**
	 * @param Level $level
	 * @param int $x
	 * @param int $z
	 * @param Player $player
	 */
	public function __construct(Level $level, $x, $z, Player $player){
		parent::__construct($level);
		
		$this->x = $x;
		$this->z = $z;
		$this->player = $player;
	}
	
	/**
	 * @return int
	 */
	public function getX(){
	  return $this->x;
	}
	
	/**
	 * @return int
	 */
	public function getZ(){
	  return $this->z;
	}
	
	/**
	 * @return Player
	 */
	public function getPlayer(){
	  return $this->player;
	}
	
}
